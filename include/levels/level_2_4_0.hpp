#include <libdragon.h>

#include "level_commands.hpp"
#include "level_enums.hpp"

void level_2_4_0_load(void) {
    if (stc == 0) {
	    ma = 7500;
	    mb = 3000 * 4;
	} else {
	    ma = 19500;
	    mb = 3000 * 11;
	    stc = 0;
	}
	set_background_music(otom[4]);
	stagecolor = 4;
	scrollx = 2900 * (40 - 19);
	//
    unsigned char stagedatex[17][1001] = {
        {5, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 10, 10, 10, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 10, 10, 10, 5, 5, 5, 5, 5},
        {5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5},
        {5, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5, 7, 7, 7, 3, 7, 0, 7, 5, 0, 0, 5, 5, 5, 0, 58, 0, 5, 0, 0, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 5, 5, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 59, 0, 0, 5, 5, 5, 5, 5},
        {5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 0, 0, 5, 5, 5, 5, 5},
        {5, 5, 5, 5, 5, 5, 40, 0, 5, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 5, 0, 59, 0, 5, 5, 5, 5, 5},
        {5, 86, 5, 5, 5, 5, 41, 0, 5, 86, 0, 0, 86, 5, 5, 5, 5, 86, 0, 0, 86, 0, 0, 86, 5, 0, 86, 5, 5, 5, 86, 0, 0, 5, 5, 5, 5, 5},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0}
    };
    //
	tco = 0;
	txtype[tco] = 0;
	tyobi(0 * 29, -1 * 29 - 12, 5);
	tco += 1;
	//
	txtype[tco] = 0;
	tyobi(4 * 29, -1 * 29 - 12, 5);
	tco += 1;
	//
	txtype[tco] = 0;
	tyobi(1 * 29, 14 * 29 - 12, 5);
	tco += 1;
	//
	txtype[tco] = 0;
	tyobi(6 * 29, 14 * 29 - 12, 5);
	tco += 1;
	//
	txtype[tco] = 0;
	tyobi(7 * 29, 14 * 29 - 12, 5);
	tco += 1;
	//
	bco = 0;
	ba[bco] = 2 * 29 * 100 - 1400;
	bb[bco] = (-2 * 29 - 12) * 100 + 500;
	btype[bco] = 86;
	bxtype[bco] = 0;
	bco += 1;
	//
	ba[bco] = 20 * 29 * 100 + 1500;
	bb[bco] = (5 * 29 - 12) * 100 + 1500;
	btype[bco] = 87;
	bxtype[bco] = 107;
	bco += 1;
	//
	sco = 0;
	sa[sco] = 17 * 29 * 100;
	sb[sco] = (9 * 29 - 12) * 100;
	sc[sco] = 21000 - 1;
	sd[sco] = 3000 - 1;
	stype[sco] = 52;
	sxtype[sco] = 2;
	sco += 1;
	//
	sa[sco] = 27 * 29 * 100;
	sb[sco] = (13 * 29 - 12) * 100;
	sc[sco] = 6000;
	sd[sco] = 6000;
	stype[sco] = 50;
	sxtype[sco] = 6;
	sco += 1;
	//
	sa[sco] = 34 * 29 * 100;
	sb[sco] = (5 * 29 - 12) * 100;
	sc[sco] = 6000;
	sd[sco] = 30000;
	stype[sco] = 50;
	sxtype[sco] = 1;
	sco += 1;
	//
	for (tt = 0; tt <= 1000; tt++) {
	    for (t = 0; t <= 16; t++) {
		stagedate[t][tt] = 0;
		stagedate[t][tt] = stagedatex[t][tt];
	    }
	}
}

const uint8_t level_2_4_0[] = {
    LEVEL_BEGIN(),
        LEVEL_CALL(level_2_4_0_load),
    LEVEL_END(),
};